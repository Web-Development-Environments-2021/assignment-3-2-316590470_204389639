---
openapi: 3.0.0
info:
  title: Simple Inventory API
  description: This is a simple API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
tags:
- name: default
  description: general perpous pages
- name: authentication
  description: actions related to login/out registration ect..
- name: user
  description: actions and requests that require being logged to the system
- name: player
  description: requests relating to players information that dont reqire being logged in
- name: coach
  description: requests realting coaches that dont require being loogged in
- name: team
  description: requests relating team information that dont require being logged in
- name: league
  description: requests relating league that dont require being logged in
paths:
  /:
    get:
      tags:
      - default
      summary: home page
      responses:
        "200":
          description: Successful pull of homepage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/homePage'
        "400":
          description: The server could not understand the request due to invalid syntax
        "404":
          description: Bad Request. Could not find the requested URL.
        "409":
          description: Can't complete the request.
  /about:
    get:
      tags:
      - default
      summary: about page
      responses:
        "200":
          description: sucsessful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/about'
        "404":
          description: Bad Request. Could not find the requested URL.
  /register:
    post:
      tags:
      - authentication
      summary: adds new user in the database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerBody'
        required: true
      responses:
        "201":
          description: Successfully created a new user.
        "400":
          description: Could not register since some fields are empty. You must fill all fields.
        "409":
          description: Username already exist
  /login:
    post:
      tags:
      - authentication
      summary: logs in existing user in the database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginBody'
        required: true
      responses:
        "200":
          description: Successfully login
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: session=v1ad5vad1v5adv
        "401":
          description: Authorization has failed due to wrong username or password.
  /logout:
    post:
      tags:
      - user
      summary: logout from user
      parameters: []
      responses:
        "205":
          description: sucsessful logout
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: session=deleted;; Expires=Wed, 24-Feb-2021 00:03:21 GMT;
                  Path=/
  /players/{playerId}/ticketDetails:
    get:
      tags:
      - player
      summary: player's ticket info
      description: shows player's ticket info.
      parameters:
      - name: playerId
        in: path
        description: Identifier of player
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 172104
      responses:
        "200":
          description: Successfully pulled player details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/player_response'
        "204":
          description: No such player id.
        "404":
          description: Bad Request. Could not find the requested URL.
  /players/search/{name}:
      get:
        tags:
        - player
        summary: search a player by partial name or full name
        paramaters:
          - name: name
            in: path
            description: name of player
            required: true
            style: simple
            explode: false
            schema:
              type: string
              example: 'messi'
        responses:
          "200":
            description: Successfully pulled player details.
            content:
              application/json:
                schema:
                  players:
                    type: array
                    items:
                      $ref: '#/components/schemas/playerPreview'
          "204":
            description: No such player id.
          "404":
            description: Bad Request. Could not find the requested URL.
  /coaches/{coachId}/ticketDetails:
    get:
      tags:
      - coach
      summary: coach's ticket info
      description: shows coach's ticket info.
      parameters:
      - name: coachId
        in: path
        description: Identifier of coach
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: firstName lastName
      responses:
        "200":
          description: Successfully pulled coach details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coach_response'
        "204":
          description: No such coach id.
        "404":
          description: Bad Request. Could not find the requested URL.
  /teams/{teamId}/ticketDetails:
    get:
      tags:
      - team
      summary: team's ticket info
      description: shows team's ticket info.
      parameters:
      - name: teamId
        in: path
        description: Identifier of team
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: bayren munich
      responses:
        "200":
          description: Successfully pulled team details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team_response'
        "204":
          description: No such coach id.
        "404":
          description: Bad Request. Could not find the requested URL.
  /users/addFavorite:
    post:
      tags:
      - user
      summary: add coach  player or team to a user's favorites
      description: adding coach, player or team to favorites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_2'
        required: true
      responses:
        "201":
          description: Successfully added to favorites.
        "409":
          description: Already in favorites. Cannot add again.
      security:
        - cookieAuth: []
  /users/favoritePlayers:
    post:
      tags:
      - user
      summary: add player to a user's favorites
      description: adding player to favorites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_2'
        required: true
      responses:
        "201":
          description: Successfully added player to favorites.
        "409":
          description: Already in favorites. Cannot add again.
    get:
      tags:
      - user
      summary: display user's favorite players
      parameters: []
      responses:
        "200":
          description: sucsess
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fav_players'
        "404":
          description: Bad Request. Could not find the requested URL.
    security:
      - cookieAuth: []
  /users/favoriteTeams:
    post:
      tags:
      - user
      summary: add team to a user's favorites
      description: adding team to favorites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_2'
        required: true
      responses:
        "201":
          description: Successfully added team to favorites.
        "409":
          description: Already in favorites. Cannot add again.
    get:
      tags:
      - user
      summary: display user's favorite teams
      parameters: []
      responses:
        "200":
          description: sucsess
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fav_teams'
        "404":
          description: Bad Request. Could not find the requested URL.
    security:
        - cookieAuth: []
  /users/favoriteGames:
    post:
      tags:
      - user
      summary: add game to a user's favorites
      description: adding game to favorites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_2'
        required: true
      responses:
        "201":
          description: Successfully added game to favorites.
        "409":
          description: Already in favorites. Cannot add again.
    get:
      tags:
      - user
      summary: display user's favorite games
      parameters: []
      responses:
        "200":
          description: sucsess
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/fav_games'
        "404":
          description: Bad Request. Could not find the requested URL.
    security:
      - cookieAuth: []
  /league/addGame:
    post:
      tags:
      - league
      description: adding new game to games table in db.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gamePreview'
        required: true
      responses:
        "201": 
          description: Successfully created game.
        "400":
          description: Bad request, some fields are wrong.
        "401":
          description: Unauthorized, you have no permissions.
    security:
      - cookieAuth: []
  /league/current_games:
    get:
      tags:
      - league
      description: display current period games
      responses:
        "200":
          description: Successfully pulled team details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/current_games'
        "404":
          description: Bad Request. Could not find the requested URL.
  /games/addResult:
    post:
      tags:
      - games
      description: add result to finished game.
      required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                game_id:
                  type: int
                  example: 83
                home_team_result:
                  type: int
                  example: 1
                away_team_result:
                  type: int
                  example: 2
      responses:
        "201":
          description: Successfully added game's results.
        "401":
          description: Unauthorized, you have no permissions.
        "409":
          description: Already has a result.
      security:
      - cookieAuth: []
  /games/addEvent:
    post:
      tags:
      - games
      description: add event to not-finished game.
      required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                game_id:
                  type: int
                  example: 83
                minute:
                  type: int
                  example: 43
                description:
                  type: string
                  exmaple: 'foul'
      responses:
        "201":
          description: Successfully added game's event.
        "401":
          description: Unauthorized, you have no permissions.
        "409":
          description: Denied, game has finished.
      security:
      - cookieAuth: []

components:
  schemas:
    securitySchemes:
      cookieAuth: 
        type: apiKey
        in: cookie
    playerPreview:
      type: object
      properties:
        full name:
          type: string
          example: Israel Israeli
        current team name:
          type: string
          example: Inter
        picture:
          type: string
        position number:
          type: integer
          example: 1
      description: shows some information on player.
    playerFull:
      type: object
      properties:
        common_name:
          type: string
          example: messi
        nationality:
          type: string
          example: Italy
        birth_date:
          type: string
          example: 1991-07-31
        birth_country:
          type: string
          example: Italy
        height:
          type: string
          example: 175 cm
        weight:
          type: string
          example: 90 kg
      description: full information about player.
    coachPreview:
      type: object
      properties:
        full_name:
          type: string
          example: Israel Israeli
        current_team_name:
          type: string
          example: Inter
        picture:
          type: string
      description: shows some information on coach.
    coachFull:
      type: object
      properties:
        common_name:
          type: string
          example: alon
        nationality:
          type: string
          example: Italy
        birth_date:
          type: string
          example: 1991-07-31
        birth_country:
          type: string
          example: Italy
      description: full information about coach.
    leagueInfo:
      type: object
      properties:
        full name:
          type: string
        current_season:
          type: string
        current_stage:
          type: string
        next_game:
          type: string
      description: information about some leagues - name, current season, current stage, next game detail
    game:
      type: object
      properties:
        date:
          type: string
          example: 2021-07-20
        time:
          type: string
          example: 15:30:00
        home_team:
          type: string
          example: Inter
        away_team:
          type: string
          example: Barcelona
        field:
          type: string
          example: Camp Nou
        home_goal:
          tpye: integer
          example: 1
        away_goal:
          type: integer
          example: 2
        events:
          type: array
          items:
            $ref: '#/components/schemas/event'
      description: info about games, occured or not.
    gamePreview:
      type: object
      properties:
        date:
          type: string
          example: 2021-07-20
        time:
          type: string
          example: 15:30:00
        home_team:
          type: string
          example: Inter
        away_team:
          type: string
          example: Barcelona
        field:
          type: string
          example: Camp Nou
      description: game not occured yet details
    event:
      type: object
      properties:
        date:
          type: string
          example: 2021-06-30
        hour:
          type: string
          example: 15:30:00
        minute:
          type: int
          example: 45
        description:
          $ref: '#/components/schemas/event_description'
          example: red card messi
    event_type:
      type: string
      enum:
        - goal
        - offside
        - offense
        - red card
        - yellow card
        - injury
        - substitution
    event_description:
      type: object
      properties:
        event_type:
          $ref: '#/components/schemas/event_type'
        player_id:
          type: int
          exmaple: 20
    registerBody:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          example: Israel
        first_name:
          type: string
          example: Israel
        last_name:
          type: string
          example: Israeli
        country:
          type: string
          example: Israel
        password:
          maxLength: 10
          minLength: 5
          type: string
          example: israel1!
        confirmation_password:
          maxLength: 10
          minLength: 5
          type: string
          example: israel1!
        email:
          type: string
          example: israel@gmail.com
        picture:
          type: string
    loginBody:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          example: Israel
        password:
          maxLength: 10
          minLength: 5
          type: string
          example: israel1!
    homePage:
      type: object
      properties:
        Leagues:
          $ref: '#/components/schemas/leagueInfo'
        Games:
          maxItems: 3
          type: array
          items:
            $ref: '#/components/schemas/gamePreview'
    player_response:
      type: object
      properties:
        Player_preview:
          $ref: '#/components/schemas/playerPreview'
        Player_full:
          $ref: '#/components/schemas/playerFull'
    coach_response:
      type: object
      properties:
        Coach_preview:
          $ref: '#/components/schemas/coachPreview'
        Coach_full:
          $ref: '#/components/schemas/coachFull'
    body_2:
      type: object
      properties:
        id:
          type: integer
          example: 50
    about:
      type: object
      properties:
        details:
          type: string
          example: this is some information about the site
    team_response:
      type: object
      properties:
        team preview:
          $ref: '#/components/schemas/teamPreview'
        team full:
          $ref: '#/components/schemas/teamFull'
    teamPreview:
      type: object
      properties:
        teamID:
          type: integer
        teamName:
          type: string
          example: Bayren Munich
        symbol:
          type: string
          example: https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/FC_Bayern_M%C3%BCnchen_logo_%282017%29.svg/1200px-FC_Bayern_M%C3%BCnchen_logo_%282017%29.svg.png
        favorite:
          type: boolean
      description: preview and full info of a team object
    teamFull:
      type: object
      properties:
        coach:
          $ref: '#/components/schemas/coachPreview'
        players:
          type: array
          items:
            $ref: '#/components/schemas/playerPreview'
        future_games:
          type: array
          items:
            $ref: '#/components/schemas/game'
        past_games:
          type: array
          items:
            $ref: '#/components/schemas/game'
      description: preview and full info of a team object
    current_games:
      type: object
      properties:
        games:
          type: array
          items:
            $ref: '#/components/schemas/game'
    fav_players:
      type: object
      properties:
        players:
          type: array
          itmes:
            $ref: '#/components/schemas/playerPreview'
    fav_teams:
      type: object
      properties:
        teams:
          type: array
          itmes:
            $ref: '#/components/schemas/teamPreview'
    fav_games:
      type: object
      properties:
        games:
          type: array
          itmes:
            $ref: '#/components/schemas/gamePreview'
